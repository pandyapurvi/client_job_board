{"version":3,"sources":["components/UserProfile.js","components/Nav.js","components/Footer.js","components/Jobs.js","components/App.js","components/JobDetail.js","components/NewJob.js","components/SeekerSignUp.js","components/EmployerSignup.js","components/Seeker.js","components/SeekerDetail.js","components/Employer.js","components/EmployerDetail.js","components/Login.js","components/Logout.js","components/Apply.js","components/Aboutme.js","Routes.js","serviceWorker.js","index.js"],"names":["UserProfile","name","email","user_id","employer","getName","Storage","temp","localStorage","getItem","setName","n","console","log","setItem","getEmail","setEmail","e","getUserId","parseInt","setUserId","id","getEmployer","setEmployer","emp","Nav","react_default","a","createElement","className","src","height","width","react_router_dom","to","isEmployer","takeID","greeting","Component","Footer","Jobs","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchJobs","c","t","title","city","axios","get","then","results","job_data","data","listJobs","i","length","jobData","push","setState","jobs","state","bind","assertThisInitialized","components_Nav","Jobs_SearchForm","onSubmit","Jobs_Showjobs","components_Footer","Showjobs","props","map","job","key","SearchForm","_this2","_handleChangeCity","_handleChangeJobTitle","_handleSubmit","event","target","value","preventDefault","onChange","type","App","components_Jobs","JobDetail","job_id","match","params","URL","JobDetail_Description","Description","isEmail","post_date","description","company_type","level","job_type","salary","close_date","NewJob","newJob","saveJob","post","result","concat","toConsumableArray","history","NewJob_CreateForm","CreateForm","_this3","_handleInputTitle","_handleInputPost_date","_handleInputDescription","_handleInputCompany_type","_handleInputLevel","_handleInputJob_type","_handleInputSalary","_handleInputCity","_handleInputClose_date","price","onInput","SeekerSignUp","password","password_confirmation","phone","website","resume","notice_period","experience","current_title","getPassword","getPassword_confirmation","getPhone","getWebsite","getResume","getNotice","getExperience","getCurrentTitle","signup","placeholder","min","EmployerSignUp","company_size","ABN","image","getCompany_size","getCompany_type","getDescription","getABN","getImage","Seeker","seeker_user","seeker_data","listSeekers","seekerData","Seeker_ShowSeekerProfile","ShowSeekerProfile","s","SeekerDetail","seeker","applications","jobList","listApplications","application_data","applicationData","listJobs_data","listJobsData","j","SeekerDetail_Detail","SeekerDetail_AppliList","Detail","AppliList","Employer","employer_user","employer_data","listEmployers","employerData","Employer_ShowEmployerProfile","ShowEmployerProfile","EmployerDetail","EmployerDetail_Detail","EmployerDetail_AppliList","app","Login","handleChange","defineProperty","handleSubmit","userDetail","userslist","urlstr","window","location","href","includes","split","replace","action","FormGroup","controlId","bsSize","style","color","FormControl","autoFocus","Button","block","disabled","validateForm","Logout","clear","Apply","application","application_date","cover_letter","Apply_CreateForm","_handleInputApplication_date","_handleInputResume","_handleInputCover_letter","Aboutme","class","Routes","react_router","exact","path","component","EmployerSignup","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.853c053d.chunk.js","sourcesContent":["const UserProfile = (function() {\n  let name = \"\";\n  let email = \"\";\n  let user_id = -1;\n  let employer = false;\n\n  const getName = function() {\n    if (typeof (Storage) !== \"undefined\") {\n      let temp = localStorage.getItem('name');\n      if (temp != null) {\n        name = temp;\n      }\n    }\n    return name;\n  };\n\n  const setName = function(n) {\n    if (n != null) {\n      name = n;\n      console.log(\"Thisis storage\" + Storage);\n      if (typeof (Storage) !== \"undefined\") {\n        localStorage.setItem('name', name);\n\n      }\n    }\n  };\n\n  const getEmail = function () {\n    if (typeof (Storage) !== \"undefined\") {\n      let temp = localStorage.getItem('email');\n      if (temp !== null) {\n        email = temp;\n      }\n    }\n    return email;\n  };\n\n  const setEmail = function (e) {\n    if (e !== null) {\n      email = e;\n      if (typeof (Storage) !== \"undefined\") {\n        localStorage.setItem('email', email);\n      }\n    }\n  };\n\n  const getUserId = function () {\n    if (typeof (Storage) !== \"undefined\") {\n      let temp = localStorage.getItem('user_id');\n      if (temp !== null) {\n        user_id = temp;\n      }\n    }\n    return parseInt(user_id);\n  };\n\n  const setUserId = function (id) {\n    user_id = id;\n    if (typeof (Storage) !== \"undefined\") {\n      localStorage.setItem('user_id', user_id);\n    }\n  };\n\n  const getEmployer = function () {\n    if (typeof (Storage) !== \"undefined\") {\n      console.log(\"hello\" + Storage);\n      let temp = localStorage.getItem('employer');\n      if (temp !== null) {\n        if (temp===\"true\" || temp===true) {\n          employer = true;\n        } else {\n          employer = false;\n        }\n      }\n    }\n    return employer;\n  };\n\n  const setEmployer = function (emp) {\n    employer = emp;\n    if (typeof (Storage) !== \"undefined\") {\n      localStorage.setItem('employer', employer);\n    }\n  };\n\n  return {\n    getName: getName,\n    setName: setName,\n    getEmail: getEmail,\n    setEmail: setEmail,\n    getUserId: getUserId,\n    setUserId: setUserId,\n    getEmployer: getEmployer,\n    setEmployer: setEmployer\n  }\n\n})();\n\nexport default UserProfile;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './../App.css';\nimport UserProfile from './UserProfile';\nclass Nav extends Component {\n  render() {\n    if (UserProfile.getEmail() === \"\") {\n      // not logged in\n\n    return (\n      <div>\n      <nav>\n        <ul>\n          <li className=\"nav\"><img src=\"http://blog.hireup.com.au/wp-content/uploads/2016/08/JOB_BOARD_blog.jpg\" height=\"50\" width=\"100\"/></li>\n          <li><Link to={\"/\"} className=\"nav\">Jobs</Link></li>\n          <li><Link to={\"/aboutme\"} className=\"nav\">About Me</Link></li>\n          <li><Link to={\"/login\"} className=\"nav\">Login</Link></li>\n\n        </ul>\n      </nav>\n      </div>\n    )\n  }else{\n    const isEmployer = UserProfile.getEmployer();\n    const takeID = UserProfile.getUserId();\n    const greeting = UserProfile.getName();\n    console.log(\"greeting name: \"+ greeting);\n    return (\n      <div>\n      <nav>\n        <ul>\n          <li className=\"nav\"><img src=\"http://blog.hireup.com.au/wp-content/uploads/2016/08/JOB_BOARD_blog.jpg\" height=\"50\" width=\"100\"/></li>\n          <li ><Link to={\"/\"} className=\"nav\">Jobs</Link></li>\n          <li ><Link to={\"/aboutme\"} className=\"nav\">About Me</Link></li>\n          <li ><Link to={\"/logout\"} className=\"nav\">LogOut</Link></li>\n          {\n          isEmployer\n          ?\n          <li ><Link to={\"/newjob\"}className=\"nav\">Post a Job</Link></li>\n          : ''\n        }\n          <li><Link to= {\"/seeker/\" + takeID} className=\"nav\" >Welcome {greeting}</Link></li>\n        </ul>\n      </nav>\n      </div>\n    )\n\n  }\n  }\n};\n\nexport default Nav;\n","\nimport React, { Component } from 'react';\nimport './../App.css';\n\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div>\n      <footer >\n      <p>&copy; Purvi Pandya 2019</p>\n      </footer>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\nimport './../App.css';\n\nclass Jobs extends Component {\n  constructor() {\n    super();\n    this.state = {\n      jobs: []\n    }\n\n    this.fetchJobs = this.fetchJobs.bind(this);\n\n    const allJobs = () => {\n      axios.get('https://server-job-board.herokuapp.com/jobs.json').then((results) => {\n        console.log(results.data);\n        this.setState({jobs :results.data});\n      })\n    };\n    allJobs();\n\n  }\n\n  fetchJobs = (c, t) => {\n    let title = t;\n    let city = c;\n\n    axios.get('https://server-job-board.herokuapp.com/jobs.json').then((results) => {\n      //console.log(results.data);\n      const job_data = results.data;\n      const listJobs = [];\n        for (let i = 0; i < job_data.length; i++) {\n          const jobData = job_data[i];\n\n          if ( city === '' && title === ''){\n            listJobs.push(jobData);//All jobs\n          } else if (city!== '' && title === '') {\n            if ( jobData.city !==null && jobData.city === city){\n              listJobs.push(jobData);//All city and jobs\n            }\n          } else if ( city === '' && title !== null){\n            if( jobData.title!== null && jobData.title === title){\n              listJobs.push( jobData )//All city and selected title\n            }\n          } else  {\n            if ((jobData.city === city) && (jobData.title === title)){\n              listJobs.push( jobData );//selected title  and selected city\n            }\n          }\n        }\n        this.setState({jobs: listJobs});\n    })\n  }\n\n\nrender() {\n  return (\n    <div>\n      <Nav/>\n      <div className=\"container\">\n      <h1>Search over current positions</h1>\n      <h1>for developers in one sizzlin' spot</h1>\n\n      <SearchForm onSubmit={ this.fetchJobs}/>\n      <Showjobs jobs={this.state.jobs}/>\n      </div>\n      <Footer/>\n    </div>\n  )\n}\n};\n\nconst Showjobs = (props) => {\n\n  if (props.jobs.length === 0){\n    return 'Your search is not matching. Please try again.'\n  } else {\n    //TODO: sort by date\n    return (\n      <div >\n      <br></br><br></br><br></br>\n      {props.jobs.map((job)=>\n        <div  >\n          <Link to={\"/job/\" + job.id} key={job.id} className=\"job-macro\"><h3>{job.title}</h3></Link>\n          </div>\n\n\n      )}\n      </div>\n    )\n\n  }\n\n\n};\n\nclass SearchForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      city: ''\n    }\n\n    this._handleChangeCity = this._handleChangeCity.bind(this);\n    this._handleChangeJobTitle = this._handleChangeJobTitle.bind(this);\n    this._handleSubmit = this._handleSubmit.bind(this);\n  }\n\n    _handleChangeCity(event){\n    console.log(event.target.value);\n    this.setState({ city: event.target.value});\n\n  };\n\n  _handleChangeJobTitle(event) {\n    console.log(event.target.value);\n    this.setState({title: event.target.value});\n\n  };\n\n  _handleSubmit(event){\n    event.preventDefault();\n    console.log(\"hi\");\n\n    this.props.onSubmit(this.state.city, this.state.title);\n  }\n\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this._handleSubmit}>\n          <label className=\"job-search\">Job title:</label>\n            <select onChange={this._handleChangeJobTitle}>\n            <option>{''}</option>\n            <option>Graduate Software Engineer</option>\n            <option>Junior Software Engineer</option>\n            <option>React-developer</option>\n            <option>Front-end Developer</option>\n            <option>Software Engineer</option>\n            </select>\n\n            <label className=\"job-search\">City:</label>\n              <select onChange={this._handleChangeCity}>\n              <option>{''}</option>\n              <option>Sydney</option>\n              <option>Melbourne</option>\n              <option>Perth</option>\n              <option>Canberra</option>\n              </select>\n\n              <button type=\"submit\" className=\"button\">Search</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Jobs;\n","import React from 'react';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\nimport Jobs from './Jobs.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Jobs />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\n//import { Link, withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\nimport UserProfile from './UserProfile';\n\nclass JobDetail extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        job: []\n      }\n      const job_id = this.props.match.params.id;\n      console.log(\"jobs\" + job_id);\n      const URL = 'https://server-job-board.herokuapp.com/jobs/'+ job_id +'.json'\n\n      const fetchJob = () => {\n        axios.get(URL).then((results) => {\n          console.log(\"This Jobs: \" + results.data)\n          this.setState({job: results.data})\n        });\n      }\n      fetchJob();\n  }\n\n  render() {\n    const isEmployer = UserProfile.getEmployer();\n    return (\n      <div>\n        <Nav />\n\n        <Description job={this.state.job}/>\n        <div className=\"grid-container\">\n        {\n        isEmployer\n        ?  <Link to={\"/newjob\"}><button className=\"button-update\">Update</button></Link>\n        : ''\n      }\n      </div>\n\n        <Footer />\n      </div>\n    )\n  }\n};\n\nclass Description extends Component {\n  render(){\n    const isEmployer = UserProfile.getEmployer();\n    const isEmail = UserProfile.getEmail();\n    console.log(\"is Email\" + isEmail);\n    return (\n      <div className=\"container\">\n      <div className=\"grid-container\">\n        <h3>{this.props.job.title}</h3>\n        <p><strong>Posted On: </strong>{this.props.job.post_date}</p>\n        <p className=\"describe\"><strong>Description: </strong>{this.props.job.description}</p>\n        <p><strong>Type of Company: </strong>{this.props.job.company_type}</p>\n        <p><strong>Level: </strong>{this.props.job.level}</p>\n        <p><strong>Type of Job: </strong>{this.props.job.job_type}</p>\n        <p><strong>Salary: </strong>${this.props.job.salary}</p>\n        <p><strong>City: </strong>{this.props.job.city}</p>\n        <p><strong>Job Closing Date: </strong>{this.props.job.close_date}</p>\n        {\n          (isEmail === '')\n          ? <Link to={\"/login\"}><button>Apply</button></Link>\n          : isEmployer\n          ? '': <Link to={\"/job/\" + this.props.job.id + \"/apply\" }><button className=\"button\">Apply</button></Link>\n        }\n\n\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default JobDetail;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\nimport UserProfile from './UserProfile';\n\nclass NewJob extends Component {\n  constructor(){\n    super();\n    this.state = {\n      newJob : []\n    }\n    this.saveJob = this.saveJob.bind(this);\n  }\n\n  saveJob( title, post_date, description, level, company_type, job_type, salary, city, close_date) {\n    const user_id = UserProfile.getUserId();\n    axios.post(\"https://server-job-board.herokuapp.com/jobs.json\", {title:title, post_date:post_date, description:description, level:level, company_type:company_type, job_type:job_type, salary:salary, city:city, close_date:close_date, user_id: user_id}).then((result) => {\n      this.setState({newJob: [...this.state.newJob, result.data]})\n      console.log(result.data);\n\n      this.props.history.push(\"/\");\n    });\n\n  }\n\n  render(){\n    // const admin = UserProfile.isAdmin() === true;\n    if (true) {\n      return(\n        <div>\n        <Nav/>\n        <div className=\"container\">\n        <h3 >New Job</h3>\n        <CreateForm onSubmit={this.saveJob}/>\n        </div>\n        <Footer/>\n        </div>\n      )\n    }\n\n  }\n};\n\n\nclass CreateForm extends Component {\n  constructor(){\n    super();\n    this.state = {\n      title: '',\n      post_date: '',\n      description: '',\n      company_type: '',\n      level: '',\n      job_type: '',\n      salary: '',\n      city: '',\n      close_date: ''\n    }\n\n\n    this._handleInputTitle = this._handleInputTitle.bind(this);\n    this._handleInputPost_date = this._handleInputPost_date.bind(this);\n    this._handleInputDescription = this._handleInputDescription.bind(this);\n    this._handleInputCompany_type = this._handleInputCompany_type.bind(this);\n    this._handleInputLevel = this._handleInputLevel.bind(this);\n    this._handleInputJob_type = this._handleInputJob_type.bind(this);\n    this._handleInputSalary = this._handleInputSalary.bind(this);\n    this._handleInputCity = this._handleInputCity.bind(this);\n    this._handleInputClose_date = this._handleInputClose_date.bind(this);\n    this._handleSubmit = this._handleSubmit.bind(this);\n  }\n\n\n  _handleInputTitle(event) {\n    console.log(event.target.value);\n    this.setState({title: event.target.value})\n  };\n  _handleInputPost_date(event) {\n    console.log(event.target.value);\n    this.setState({post_date: event.target.value})\n  };\n\n  _handleInputDescription(event) {\n    console.log(event.target.value);\n    this.setState({description: event.target.value})\n  };\n\n  _handleInputCompany_type(event) {\n    console.log(event.target.value);\n    this.setState({company_type: event.target.value})\n    console.log(this.state.price)\n  };\n\n  _handleInputLevel(event) {\n    console.log(event.target.value);\n    this.setState({level: event.target.value})\n  };\n\n  _handleInputJob_type(event) {\n    console.log(event.target.value);\n    this.setState({job_type: event.target.value})\n  };\n\n  _handleInputSalary(event) {\n    console.log(event.target.value);\n    this.setState({salary: event.target.value})\n  };\n\n  _handleInputCity(event) {\n    console.log(event.target.value);\n    this.setState({city: event.target.value})\n  };\n\n  _handleInputClose_date(event) {\n    console.log(event.target.value);\n    this.setState({close_date: event.target.value})\n  };\n\n  _handleSubmit(event){\n    event.preventDefault();\n    // console.log(\"hi\");\n    this.props.onSubmit(this.state.title, this.state.post_date, this.state.description, this.state.company_type, this.state.level, this.state.job_type, this.state.salary, this.state.city, this.state.close_date);\n\n\n  }\n  render () {\n\n    return (\n      <div className=\"grid-container\">\n      <form onSubmit={this._handleSubmit} >\n      <label >Job Title:</label><br/>\n      <input type=\"text\" onInput={this._handleInputTitle} className=\"grid-input\"/>\n      <br />\n\n      <label >Post Date:</label><br/>\n      <input type=\"date\" onInput={this._handleInputPost_date} className=\"grid-input\"/>\n      <br />\n\n      <label >Description:</label><br/>\n      <textarea onInput={this._handleInputDescription} className=\"grid-input\"/>\n      <br />\n\n      <label>Type of Company:</label><br/>\n      <input type=\"text\" onInput={this._handleInputCompany_type} className=\"grid-input\"/>\n      <br />\n\n      <label>Level:</label><br/>\n      <input type=\"text\" onInput={this._handleInputLevel} className=\"grid-input\"/>\n      <br />\n\n      <label>Type of Job:</label><br/>\n      <input type=\"text\" onInput={this._handleInputJob_type} className=\"grid-input\"/>\n      <br />\n\n      <label>Salary:</label><br/>\n      <input type=\"number\" onInput={this._handleInputSalary} className=\"grid-input\"/>\n      <br />\n\n      <label >City:</label><br/>\n      <input type=\"text\" onInput={this._handleInputCity} className=\"grid-input\"/>\n      <br />\n\n      <label>Closing Date:</label><br/>\n      <input type=\"date\" onInput={this._handleInputClose_date} className=\"grid-input\"/>\n      <br /><br/>\n\n      <Link to={\"/\"}><button type=\"submit\" className=\"button\">Create Job!</button></Link>\n\n      </form>\n      </div>\n\n    );\n  }\n};\n\nexport default NewJob;\n","import React, { Component } from 'react';\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\nimport './../App.css';\nimport axios from 'axios';\nimport UserProfile from './UserProfile';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\n\nclass SeekerSignUp extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      phone: \"\",\n      website:\"\",\n      resume:\"\",\n      notice_period:\"\",\n      experience: \"\",\n      current_title: \"\",\n      employer: false\n    };\n    this.getName = this.getName.bind(this);\n    this.getEmail = this.getEmail.bind(this);\n    this.getPassword = this.getPassword.bind(this);\n    this.getPassword_confirmation = this.getPassword_confirmation.bind(this);\n    this.getPhone = this.getPhone.bind(this);\n    this.getWebsite = this.getWebsite.bind(this);\n    this.getResume = this.getResume.bind(this);\n    this.getNotice = this.getNotice.bind(this);\n    this.getExperience = this.getExperience.bind(this);\n    this.getCurrentTitle = this.getCurrentTitle.bind(this);\n    this.signup = this.signup.bind(this);\n    //this.saveUser = this.saveUser.bind(this);\n  }\n  getName(event) {\n      this.setState({\n        name: event.target.value\n      });\n    }\n\n    getEmail(event) {\n      this.setState({\n        email: event.target.value\n      });\n    }\n\n    getPassword(event) {\n      this.setState({\n        password: event.target.value\n      });\n    }\n\n    getPassword_confirmation(event) {\n      this.setState({\n        password_confirmation: event.target.value\n      });\n    }\n\n    getPhone(event) {\n      this.setState({\n        phone: event.target.value\n      });\n    }\n\n    getWebsite(event) {\n      this.setState({\n        website: event.target.value\n      });\n    }\n\n    getResume(event) {\n      this.setState({\n        resume: event.target.value\n      });\n    }\n\n    getNotice(event) {\n      this.setState({\n        notice_period: event.target.value\n      });\n    }\n\n    getExperience(event) {\n      this.setState({\n        experience: event.target.value\n      });\n    }\n\n    getCurrentTitle(event) {\n      this.setState({\n        current_title: event.target.value\n      });\n    }\n    signup(event) {\n        event.preventDefault();\n        axios\n          .post(\"https://server-job-board.herokuapp.com/users.json\", {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password_confirmation: this.state.password_confirmation,\n            phone: this.state.phone,\n            website: this.state.website,\n            resume: this.state.resume,\n            notice_period: this.state.notice_period,\n            experience: this.state.experience,\n            current_title:this.state.current_title,\n            employer:this.state.employer\n\n\n          })\n          .then(result => {\n            console.log(result);\n\n            this.props.history.push(\"/\"); ////\n          });\n      }\n\n\n\n  render(){\n\n    return(\n\n      <div >\n        <Nav />\n        <div className=\"grid-container container\">\n        <h3>Sign Up</h3>\n        <form onSubmit={this.signup}>\n          <input\n            className=\"signup-input\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.getName}\n            placeholder=\"Name\"\n          />\n          <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"text\"\n            value={this.state.email}\n            onChange={this.getEmail}\n            placeholder=\"E-mail\"\n          />\n          <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.getPassword}\n            placeholder=\"Password\"\n          />\n          <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"password\"\n            value={this.state.password_confirmation}\n            onChange={this.getPassword_confirmation}\n            placeholder=\"Confirm Password\"\n          />\n          <br/>\n\n\n          <input\n            className=\"signup-input\"\n            type=\"number\"\n            value={this.state.phone}\n            onChange={this.getPhone}\n            placeholder=\"phone no.\"\n            />\n            <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"text\"\n            value={this.state.website}\n            onChange={this.getWebsite}\n            placeholder=\"website link\"\n            />\n            <br/>\n\n            <input\n              className=\"signup-input\"\n              type=\"text\"\n              value={this.state.notice_period}\n              onChange={this.getNotice}\n              placeholder=\"notice period\"\n              />\n              <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"number\"\n            value={this.state.experience}\n            onChange={this.getExperience} min=\"0\"\n            placeholder=\"experience years\"\n            />\n            <br/>\n          <input\n            className=\"signup-input\"\n            type=\"text\"\n            value={this.state.current_title}\n            onChange={this.getCurrentTitle}\n            placeholder=\"current title\"\n            />\n            <br/>\n\n          <button className=\"signup-btn\" type=\"submit\" value=\"\">\n            {\" \"}\n            Sign Up\n          </button>\n        </form>\n      </div>\n\n\n        <Footer />\n      </div>\n    );\n  }\n};\n\nexport default SeekerSignUp;\n","import React, { Component } from 'react';\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\n//import './../App.css';\nimport axios from 'axios';\nimport UserProfile from './UserProfile';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\n\nclass EmployerSignUp extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      //password_confirmation: \"\",\n      phone: \"\",\n      website:\"\",\n      company_size: \"\",\n      company_type: \"\",\n      description: \"\",\n      ABN: \"\",\n      image: \"\",\n      //resume:\"\",\n      // notice_period:\"\",\n      // experience: \"\",\n      // current_title: \"\",\n      employer: true\n    };\n    this.getName = this.getName.bind(this);\n    this.getEmail = this.getEmail.bind(this);\n    this.getPassword = this.getPassword.bind(this);\n    // this.getPassword_confirmation = this.getPassword_confirmation.bind(this);\n    this.getPhone = this.getPhone.bind(this);\n    this.getWebsite = this.getWebsite.bind(this);\n    this.getCompany_size = this.getCompany_size.bind(this);\n    this.getCompany_type = this.getCompany_type.bind(this);\n    this.getDescription = this.getDescription.bind(this);\n    this.getABN = this.getABN.bind(this);\n    this.getImage = this.getImage.bind(this);\n    this.signup = this.signup.bind(this);\n    //this.saveUser = this.saveUser.bind(this);\n  }\n  getName(event) {\n      this.setState({\n        name: event.target.value\n      });\n    }\n\n    getEmail(event) {\n      this.setState({\n        email: event.target.value\n      });\n    }\n\n    getPassword(event) {\n      this.setState({\n        password: event.target.value\n      });\n    }\n\n    // getPassword_confirmation(event) {\n    //   this.setState({\n    //     password_confirmation: event.target.value\n    //   });\n    // }\n\n    getPhone(event) {\n      this.setState({\n        phone: event.target.value\n      });\n    }\n\n    getWebsite(event) {\n      this.setState({\n        website: event.target.value\n      });\n    }\n\n    getResume(event) {\n      this.setState({\n        resume: event.target.value\n      });\n    }\n\n    getCompany_size(event) {\n      this.setState({\n        company_size: event.target.value\n      });\n    }\n\n    getCompany_type(event) {\n      this.setState({\n        company_type: event.target.value\n      });\n    }\n\n    getDescription(event) {\n      this.setState({\n        description: event.target.value\n      });\n    }\n\n    getABN(event) {\n      this.setState({\n        ABN: event.target.value\n      });\n    }\n\n    getImage(event) {\n      this.setState({\n        image: event.target.value\n      });\n    }\n\n\n    signup(event) {\n        event.preventDefault();\n        axios\n          .post(\"https://server-job-board.herokuapp.com/users.json\", {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            // password_confirmation: this.state.password_confirmation,\n            phone: this.state.phone,\n            website: this.state.website,\n            company_type: this.state.company_type,\n            company_size: this.state.company_size,\n            description: this.state.description,\n            ABN:this.state.ABN,\n            image: this.state.image,\n            employer:this.state.employer\n\n\n          })\n          .then(result => {\n            console.log(result);\n\n            this.props.history.push(\"/\"); ////\n          });\n      }\n\n\n  render(){\n    return(\n\n      <div>\n        <Nav />\n        <div className=\"grid-container container\">\n        <h3>Sign Up</h3>\n        <form onSubmit={this.signup}>\n          <input\n            className=\"signup-input\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.getName}\n            placeholder=\"Name\"\n          />\n          <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"text\"\n            value={this.state.email}\n            onChange={this.getEmail}\n            placeholder=\"E-mail\"\n          />\n          <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.getPassword}\n            placeholder=\"Password\"\n          />\n          <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"number\"\n            value={this.state.phone}\n            onChange={this.getPhone}\n            placeholder=\"phone no.\"\n            />\n            <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"text\"\n            value={this.state.website}\n            onChange={this.getWebsite}\n            placeholder=\"website link\"\n            />\n            <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"text\"\n            value={this.state.company_size}\n            onChange={this.getCompany_size}\n            placeholder=\"size of company\"\n            />\n            <br/>\n\n            <input\n              className=\"signup-input\"\n              type=\"text\"\n              value={this.state.company_type}\n              onChange={this.getCompany_type}\n              placeholder=\"type of company\"\n              />\n              <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"textarea\"\n            value={this.state.description}\n            onChange={this.getDescription}\n            placeholder=\"describe your company\"\n            />\n            <br/>\n\n          <input\n            className=\"signup-input\"\n            type=\"text\"\n            value={this.state.ABN}\n            onChange={this.getABN}\n            placeholder=\"ABN\"\n            />\n            <br/>\n\n            <input\n              className=\"signup-input\"\n              type=\"text\"\n              value={this.state.image}\n              onChange={this.getImage}\n              placeholder=\"http\"//...\"\n              />\n              <br/>\n\n\n          <button className=\"signup-btn\" type=\"submit\" value=\"\">\n            {\" \"}\n            Sign Up\n          </button>\n        </form>\n      </div>\n\n\n        <Footer />\n      </div>\n    );\n  }\n};\n\nexport default EmployerSignUp;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\nimport UserProfile from './UserProfile';\n\n// note: https://github.com/wojtekmaj/react-pdf\nclass Seeker extends Component {\n  constructor(){\n    super();\n    this.state = {\n      seeker_user:[]\n    }\n    // this.allSeeker = this.allSeeker.bind(this);\n\n  const allSeeker = () => {\n    axios.get('https://server-job-board.herokuapp.com/users.json').then((results) => {\n      console.log(results.data);\n      const seeker_data = results.data;\n      const listSeekers = [];\n      for (let i = 0; i < seeker_data.length; i++){\n        const seekerData = seeker_data[i];\n        console.log(seekerData);\n        console.log(\"employer\" + seekerData.employer)\n\n         if (seekerData.employer === false){\n           listSeekers.push(seekerData);\n         }\n      }\n      this.setState({seeker_user: listSeekers});\n      console.log(listSeekers);\n    })\n  };\n  allSeeker();\n  }\n  render(){\n    return (\n      <div>\n      <Nav />\n        <h3>All Seeker Profile</h3>\n        <ShowSeekerProfile seeker_user={this.state.seeker_user}/>\n        <Footer/>\n      </div>\n    )\n  }\n};\n\nconst ShowSeekerProfile =  (props) => {\n  const isEmployer = UserProfile.getEmployer();\n\n    return(\n      <div className=\"grid-container\">\n        {props.seeker_user.map((s) =>\n              <div className=\"job-macro\">\n              <Link to={\"/seeker/\" + s.id} className=\"seeker\" ><p>{s.name}</p></Link>\n              <p >{s.current_title}</p>\n              </div>\n\n        )}\n      </div>\n    )\n};\nexport default Seeker;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\n// import UserProfile from './UserProfile';\n\nclass SeekerDetail extends Component {\n  constructor(props){\n    super(props);\n      this.state = {\n        seeker: [],\n        applications: [],\n        jobList: []\n      }\n      const listApplications = [];\n      const listJobs = [];\n      const user_id = this.props.match.params.id;\n\n      const URL = 'https://server-job-board.herokuapp.com/users/'+ user_id +'.json'\n\n      const fetchSeeker = () => {\n        axios.get(URL).then((results) => {\n\n          this.setState({seeker: results.data})\n        });\n      }\n      fetchSeeker();\n\n\n      const allApplications = () => {\n        // const listApplications = [];\n        // const listJobs = [];\n        axios.get('https://server-job-board.herokuapp.com/applications.json').then((results) => {\n\n\n          const application_data = results.data;\n                console.log(\"application Data: \" + results.data);\n            for (let i = 0; i < application_data.length; i++) {\n              const applicationData = application_data[i];\n              console.log(\"applicationData.user_id : \"+ applicationData.user_id);\n              console.log(\"user_id: \" + user_id);\n                if (applicationData.user_id == user_id){\n                    console.log(\"come here: \" + applicationData);\n                  listApplications.push( applicationData );//selected title  and selected city\n                }\n\n            }\n            console.log(\"listApplications: \" + listApplications);\n            this.setState({applications: listApplications});\n        })\n        // axios.get('https://server-job-board.herokuapp.com/jobs.json').then((results) => {\n        //\n        //   const listJobs_data = results.data;\n        //     console.log(\"Ahiya Aave K e nai\" + listJobs_data.length);\n        //     for (let i = 0; i < listJobs_data.length; i++) {\n        //       const listJobsData = listJobs_data[i];\n        //       for ( let j = 0; j < listApplications.length; j++){\n        //         if (listJobsData.id === listApplications[j].job_id){\n        //           console.log(\"Have Ahinu Su chhe\");\n        //           listJobs.push( listJobsData );\n        //         }\n        //\n        //       }\n        //\n        //\n        //     }\n        //     this.setState({jobList: listJobs});\n        //\n        // })\n\n\n      }\n      const allJobs = () => {\n      axios.get('https://server-job-board.herokuapp.com/jobs.json').then((results) => {\n\n        const listJobs_data = results.data;\n\n          for (let i = 0; i < listJobs_data.length; i++) {\n            const listJobsData = listJobs_data[i];\n\n            for ( let j = 0; j < listApplications.length; j++){\n              if (listJobsData.id === listApplications[j].job_id){\n\n                listJobs.push( listJobsData );\n              }\n\n            }\n          }\n          this.setState({jobList: listJobs});\n\n      })\n    }\n      allApplications();\n      allJobs();\n  }\n  render() {\n    return (\n      <div>\n      <Nav />\n        <h3>Seeker profile</h3>\n\n        <Detail seeker={this.state.seeker} />\n        <AppliList jobList={this.state.jobList} applications={this.state.applications}/>\n        {console.log(\"return ma listJobs\" + this.state.jobList)}\n        {console.log(\"return ma applications\" + this.state.applications)}\n        <Footer />\n      </div>\n    )\n  }\n};\n\nconst Detail = (props) => {\n  return (\n    <div className=\"container\">\n    <div className=\"grid-container\">\n\n      <h4>Name of Candidate:{props.seeker.name}</h4>\n          <p><strong>Email address:</strong>{props.seeker.email}</p>\n          <p><strong>Contact number:</strong>{props.seeker.phone}</p>\n          <p><strong>Social Website:</strong>{props.seeker.website}</p>\n          <p><strong>Current title:</strong>{props.seeker.current_title}</p>\n          <p><strong>Require Notice Period:</strong>{props.seeker.notice_period}</p>\n          <p><strong>Total years of an experience:</strong>{props.seeker.experience}</p>\n\n\n    </div>\n    <hr></hr>\n    </div>\n\n\n  )\n}\n\nconst AppliList = (props) => {\n\n    if (props.jobList.length === 0){\n      return 'You havnt Applied for any Job.'\n    } else {\n      //TODO: sort by date\n      return (\n\n        <div className=\"container\" >\n        <h3>Applied Jobs by Seeker</h3>\n        {props.jobList.map((job)=>\n          <div className=\"applied-job grid-container\">\n          <h4 >Job Title:{job.title}</h4>\n\n          </div>\n        )}\n        </div>\n\n\n      )\n\n\n    }\n\n\n}\n\nexport default SeekerDetail;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\nimport UserProfile from './UserProfile';\n\nclass Employer extends Component {\n  constructor(){\n    super();\n    this.state = {\n      employer_user:[]\n    }\n    // this.allSeeker = this.allSeeker.bind(this);\n\n  const allEmployer = () => {\n    axios.get('https://server-job-board.herokuapp.com/users.json').then((results) => {\n      console.log(results.data);\n      const employer_data = results.data;\n      const listEmployers = [];\n      for (let i = 0; i < employer_data.length; i++){\n        const employerData = employer_data[i];\n        console.log(employerData);\n        console.log(\"employer\" + employerData.employer)\n\n         if (employerData.employer === true){\n           listEmployers.push(employerData);\n         }\n      }\n      this.setState({employer_user: listEmployers});\n      console.log(listEmployers);\n    })\n  };\n  allEmployer();\n  }\n\n  render(){\n    return (\n      <div>\n      <Nav />\n        <h3>All Employer Profile</h3>\n        <ShowEmployerProfile employer_user={this.state.employer_user}/>\n        <Footer/>\n      </div>\n    )\n  }\n};\n\nconst ShowEmployerProfile =  (props) => {\n  const isEmployer = UserProfile.getEmployer();\n\n    return(\n      <div className=\"grid-container\" >\n\n        {props.employer_user.map((s) =>\n              <div className=\"job-macro\">\n              <Link to={\"/employer/\" + s.id} className=\"seeker\"><p>{s.name}</p></Link>\n              <p>{s.employer}</p>\n\n              </div>\n\n\n        //   {\n        //   s.employer=='false'\n        //   ?  <p>{s.name}</p>\n        //\n        //   : ''\n        // }\n\n        )}\n      </div>\n    )\n\n};\n\nexport default Employer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\n// import UserProfile from './UserProfile';\n\nclass EmployerDetail extends Component {\n  constructor(props){\n    super(props);\n      this.state = {\n        employer: [],\n        applications: [],\n        jobList: []\n      }\n      const listApplications = [];\n      const listJobs = [];\n      const user_id = this.props.match.params.id;\n\n      const URL = 'https://server-job-board.herokuapp.com/users/'+ user_id +'.json'\n\n      const fetchEmployer = () => {\n        axios.get(URL).then((results) => {\n\n          this.setState({employer: results.data})\n        });\n      }\n      fetchEmployer();\n\n\n      const allApplications = () => {\n        // const listApplications = [];\n        // const listJobs = [];\n        axios.get('https://server-job-board.herokuapp.com/jobs.json').then((results) => {\n\n\n          const application_data = results.data;\n            console.log(\"reaching here \" + application_data[0].user_id);\n            for (let i = 0; i < application_data.length; i++) {\n              const applicationData = application_data[i];\n\n                if (applicationData.user_id == user_id){\n\n                  listApplications.push( applicationData );//selected title  and selected city\n                }\n\n            }\n            this.setState({applications: listApplications});\n        })\n\n      }\n      const allJobs = () => {\n      axios.get('https://server-job-board.herokuapp.com/jobs.json').then((results) => {\n\n        const listJobs_data = results.data;\n\n          for (let i = 0; i < listJobs_data.length; i++) {\n            const listJobsData = listJobs_data[i];\n\n            for ( let j = 0; j < listApplications.length; j++){\n              if (listJobsData.id === listApplications[j].job_id){\n\n                listJobs.push( listJobsData );\n              }\n\n            }\n          }\n          this.setState({jobList: listJobs});\n\n      })\n    }\n      allApplications();\n      allJobs();\n  }\n  render() {\n    return (\n      <div>\n      <Nav />\n        <h3>Employer profile</h3>\n\n        <Detail employer={this.state.employer} />\n        <AppliList jobList={this.state.jobList} applications={this.state.applications}/>\n        {console.log(\"application detail:\" + this.state.applications)}\n        <Footer />\n      </div>\n    )\n  }\n};\n\nconst Detail = (props) => {\n  return (\n    <div className=\"grid-container\">\n\n      <h4>Name of Company:{props.employer.name}</h4>\n      <img src={props.employer.image} width=\"200\" height=\"200\"/>\n          <p><strong>Email address:</strong>{props.employer.email}</p>\n          <p><strong>Contact number:</strong>{props.employer.phone}</p>\n          <p><strong>Social Website:</strong>{props.employer.website}</p>\n          <p><strong>Size of Company:</strong>{props.employer.company_size}</p>\n          <p><strong>Type of Company:</strong>{props.employer.company_type}</p>\n          <p className=\"describe\"><strong>Description:</strong>{props.employer.description}</p>\n          <p><strong>ABN:</strong>{props.employer.ABN}</p>\n          <Link to={\"/seeker\"} className=\"employer-btn\">See Seeker's Profile</Link>\n\n\n\n    </div>\n  )\n}\n\nconst AppliList = (props) => {\n\n    if (props.applications.length === 0){\n      return 'You havnt Post any Job.'\n    } else {\n      //TODO: sort by date\n      return (\n        <div>\n        {props.applications.map((app)=>\n          <div>\n          <h4>Job Title:{app.title}</h4>\n\n          </div>\n        )}\n        </div>\n      )\n\n    }\n\n}\n\nexport default EmployerDetail;\n","// import React, { Component } from \"react\";\n// import axios from \"axios\";\n// // import {ApolloProvider, ApolloConsumer, createNetworkInterface} from 'react-apollo'\n// import Router from \"react-router-dom\";\n\nimport React, { Component } from 'react';\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\n// import './../App.css';\nimport axios from 'axios';\nimport UserProfile from './UserProfile';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\nimport { Link } from 'react-router-dom';\n\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const baseURL = \"https://server-job-board.herokuapp.com/users.json\";\n    let user_id = -1;\n    let userDetail = null;\n\n    axios.get(baseURL).then((result) =>{\n\n      const userslist = result.data;\n        console.log(this.state.email);\n        console.log(userslist);\n        for (let i=0; i<userslist.length; i++) {\n          if (userslist[i].email === this.state.email) {\n            user_id = userslist[i].id;\n            userDetail = userslist[i];\n            break;\n          }\n        }\n        console.log(user_id);\n      if (user_id > 0) {\n        UserProfile.setName(userDetail.name);\n        UserProfile.setUserId(user_id);\n        UserProfile.setEmployer(userDetail.employer);\n        UserProfile.setEmail(userDetail.email);\n\n        let urlstr = window.location.href;\n        if (urlstr.includes('#')) {\n          urlstr = urlstr.split('#')[0] + '#/'\n        }\n        window.location.replace(urlstr);\n      }\n    });\n\n  }\n\n  render() {\n    return (\n      <div>\n      <Nav />\n      <header className=\"login\">\n      <h1>Login</h1>\n      <p>Welcome Back! New to the site?</p>\n      <Link to={\"/seekersignup\"} className=\"signup-link\"><p>Signup here if you are a Seeker</p></Link>\n      <Link to={\"/employersignup\"} className=\"signup-link\"><p>Signup here if you are an Employer</p></Link>\n\n      <form onSubmit={this.handleSubmit} action=\"/\">\n      <FormGroup controlId=\"email\" bsSize=\"large\">\n      <span style={{color: 'black'}}></span>\n      <FormControl\n      autoFocus\n      type=\"email\"\n      placeholder=\"Your email address\"\n      value={this.state.email}\n      onChange={this.handleChange}\n      className=\"login-input\"\n      />\n      </FormGroup>\n      <FormGroup controlId=\"password\" bsSize=\"large\">\n      <span style={{color: 'black'}} ></span>\n    <br/>\n      <FormControl\n      value={this.state.password}\n      onChange={this.handleChange}\n      type=\"password\"\n      placeholder=\"Password\"\n      className=\"login-input\"\n      />\n      </FormGroup>\n      <Button\n      block\n      bsSize=\"large\"\n      disabled={!this.validateForm()}\n      type=\"submit\"\n      className=\"login-btn\"\n      >\n      Login\n      </Button>\n      </form>\n      </header>\n      <Footer />\n      </div>\n    );\n  }\n}\n\n\n\n// const SERVER_URL = \"http://localhost:3000/users.json\";\n// class Login extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       email: \"\",\n//       password: \"\",\n//         users: []\n//     };\n//\n//     this.getEmail = this.getEmail.bind(this);\n//     this.getPassword = this.getPassword.bind(this);\n//     //this.login = this.login.bind(this);\n//     this.loginfetch = this.loginfetch.bind(this);\n//     // this.gettingUserInfo = this.gettingUserInfo.bind(this)\n//     this.routeChange = this.routeChange.bind(this);\n//     this._handleSubmit = this._handleSubmit.bind(this);\n//   }\n//\n//   // gettingUserInfo(){\n//   //   console.log('userinfo fired');\n//   //   axios.get('http://localhost:3333/user/info', {withCredentials: true}).then((result)=>{ //need option?\n//   //     console.log('!!!!!!!!!axios result for userinfo fired: ', result);\n//   //   })\n//\n//   // }\n//\n//   routeChange() {\n//     let path = `/signup`;\n//     this.props.history.push(path);\n//   }\n//\n//   getEmail(event) {\n//     this.setState({\n//       email: event.target.value\n//     });\n//   }\n//\n//   getPassword(event) {\n//     this.setState({\n//       password: event.target.value\n//     });\n//   }\n//   _handleSubmit(event){\n//     event.preventDefault();\n//     console.log(\"hi\");\n//\n//     this.loginfetch(this.state.email, this.state.password);\n//   }\n//   // login(event) {\n//   //   event.preventDefault();\n//   //   console.log(\"Email \" + this.state.email, \"Password \" + this.state.password);\n//   //\n//   //   axios\n//   //     .post(\n//   //       SERVER_URL,\n//   //       { email: this.state.email, password: this.state.password }\n//   //       // { withCredentials: true }\n//   //     )\n//   //     .then(result => {\n//   //       console.log(\"here is what is going on result 1111\", result); // this is the right one\n//   //       console.log(\"here is what is going on result.data 1111\", result.data); // this is the right one\n//   //       console.log(\n//   //         \"here is what is going on result.data.data 1111\",\n//   //         result.data.data\n//   //       );\n//   //       // console.log('here is what is going on data.request.response', result[\"request\"])\n//   //       //result should be session\n//   //\n//   //       // this.props.history.push(\"/\");\n//   //     })\n//   //     .then(result => {\n//   //       console.log(\"here is  what is going on 22:\", result);\n//   //     })\n//   //     .then(aa => {\n//   //       console.log(\"getting info fired\");\n//   //       // this.gettingUserInfo()\n//   //     })\n//   //     .then(aa => {\n//   //       console.log(\"getting info fired\");\n//   //       // this.gettingUserInfo()\n//   //     });\n//   //     setTimeout(()=>{\n//   //       this.props.history.push(\"/\");\n//   //     }, 1000)\n//   //\n//   // }\n//   loginfetch = (u, p) => {\n//     let username = u;\n//     let password = p;\n//       console.log(\"Username:\" + username + \" Password:\" + password);\n//     axios.get('http://localhost:3000/users.json').then((results) => {\n//       //console.log(results.data);\n//       const users_data = results.data;\n//       const listUser = [];\n//         for (let i = 0; i < users_data.length; i++) {\n//           const userData = users_data[i];\n//           console.log(\"In Loop: email: \" + userData.email + \" Password: \" + userData.password_digest);\n//           if ( userData.email === username && userData.password === password){\n//             console.log(\"userData:\" + userData);\n//             listUser.push(userData);//All jobs\n//           }\n//           // else if (city!== '' && title === '') {\n//           //   if ( jobData.city !==null && jobData.city === city){\n//           //     listJobs.push(jobData);//All city and jobs\n//           //   }\n//           // } else if ( city === '' && title !== null){\n//           //   if( jobData.title!== null && jobData.title === title){\n//           //     listJobs.push( jobData )//All city and selected title\n//           //   }\n//           // } else  {\n//           //   if ((jobData.city === city) && (jobData.title === title)){\n//           //     listJobs.push( jobData );//selected title  and selected city\n//           //   }\n//           // }\n//         }\n//         this.setState({users: listUser});\n//     })\n//   }\n//\n//\n//   render() {\n//     return (\n//       <>\n//         <div className=\"login-container\">\n//           <h2>Login</h2>\n//           <form className=\"login-form\" onSubmit={this._handleSubmit}>\n//             <input\n//               className=\"email-login-input\"\n//               type=\"text\"\n//               value={this.state.email}\n//               onChange={this.getEmail}\n//               placeholder=\"E-mail\"\n//             />\n//             <input\n//               className=\"password-login-input\"\n//               type=\"password\"\n//               value={this.state.password}\n//               onChange={this.getPassword}\n//               placeholder=\"Password\"\n//             />\n//             <button className=\"login-page-button\" type=\"submit\" value=\"Login\">\n//               Login\n//             </button>\n//           </form>\n//           <span className=\"dont-have\">\n//             Dont have an account yet?\n//             <button\n//               className=\"login-page-signup-button\"\n//               onClick={this.routeChange}\n//             >\n//               Sign up here\n//             </button>\n//           </span>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n//\n // export default Login;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\nimport UserProfile from './UserProfile';\n\nclass Logout extends Component {\n  constructor() {\n    super();\n    UserProfile.setName('');\n    UserProfile.setEmail('');\n    UserProfile.setUserId(-1);\n    //UserProfile.setAdmin(false);\n\n\n    if (typeof (Storage) !== \"undefined\") {\n      localStorage.clear();\n    }\n\n    let urlstr = window.location.href;\n    if (urlstr.includes('#')) {\n      urlstr = urlstr.split('#')[0] + '#/'\n    }\n    console.log(urlstr);\n    window.location.replace(urlstr);\n  }\n  render() {\n    return (\n      \"/\"\n    );\n  }\n}\n\nexport default Logout;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\nimport UserProfile from './UserProfile';\nimport cloudinary from 'cloudinary-core';\n\nclass Apply extends Component {\n  constructor() {\n    super();\n    this.state = {\n      application: [],\n      // resumeURL: '',\n    }\n    this.saveJob = this.saveJob.bind(this);\n\n    // this.widget = window.cloudinary.createUploadWidget({\n    //   cloudName: 'drgwrxu6l',\n    //   uploadPreset: 'wstkmhtq'},\n    //   (error, result) => {\n    //     if (result.event === 'success') {\n    //       this.setState({resumeURL: result.info.secure_url})\n    //     }\n    //\n    //   })\n\n  }\n\n  saveJob( application_date, cover_letter, resume) {\n    // const resume = this.state.resumeURL\n    const user_id = UserProfile.getUserId();\n    const job_id = this.props.match.params.id;\n    console.log(\"Userid: \" + user_id);\n    console.log(\"Jobid: \" + job_id);\n    axios.post(\"https://server-job-board.herokuapp.com/applications.json\", {user_id: user_id, job_id: job_id, application_date:application_date, resume:resume, cover_letter:cover_letter}).then((result) => {\n      console.log(\"result.data : \" + result.data);\n      let urlstr = window.location.href;\n      //let urlstr = \"http://localhost:3001/?#/\";\n      console.log(\"urlstr: \" + urlstr);\n      if (urlstr.includes('#')) {\n        urlstr = urlstr.split('#')[0] + '/'\n      }\n      window.location.replace(urlstr);\n      this.setState({application: [...this.state.application, result.data]})\n\n\n      this.props.history.push(\"/\");\n\n    });\n\n  }\n\n\n  // showWidget = () => {\n  //   this.widget.open()\n  // }\n  // checkUploadResult = (resultEvent) => {\n  //   if (resultEvent.event==='success') {\n  //     console.log(resultEvent);\n  //     // this.saveResume({resultEvent.secure_url})\n  //   }\n  // }\n\n  render() {\n\n    return (\n      <div>\n        <Nav/>\n          <h3>Job Application</h3>\n\n        <CreateForm onSubmit={this.saveJob}/>\n        <Footer/>\n      </div>\n    )\n  }\n};\n\nclass CreateForm extends Component {\n  constructor(){\n    super();\n    this.state = {\n      application_date:'',\n      resume:'',\n      cover_letter: ''\n    }\n\n    this._handleInputApplication_date = this._handleInputApplication_date.bind(this);\n    this._handleInputResume = this._handleInputResume.bind(this);\n    this._handleInputCover_letter = this._handleInputCover_letter.bind(this);\n    this._handleSubmit = this._handleSubmit.bind(this);\n  }\n\n  _handleInputApplication_date(event) {\n    console.log(event.target.value);\n    this.setState({application_date: event.target.value})\n  };\n  _handleInputResume(event) {\n    console.log(event.target.value);\n    this.setState({resume: event.target.value})\n  };\n\n  _handleInputCover_letter(event) {\n    console.log(event.target.value);\n    this.setState({cover_letter: event.target.value})\n  };\n\n  _handleSubmit(event){\n    event.preventDefault();\n    this.props.onSubmit(this.state.application_date, this.state.resume, this.state.cover_letter);\n\n\n  }\n  render () {\n\n    return (\n      <div className=\"grid-container\">\n      <form onSubmit={this._handleSubmit} >\n\n      <label className=\"item\">Resume:</label>\n      <textarea onInput={this._handleInputResume}/>\n      <br /><br/>\n\n      <label className=\"item\">Cover letter:</label>\n      <textarea onInput={this._handleInputCover_letter}/>\n      <br /><br/>\n\n      <label className=\"item\">Date: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n      <input type=\"date\" onInput={this._handleInputApplication_date}/>\n      <br/><br/>\n      <Link to={\"/\"}><button type=\"submit\" className=\"apply-btn\">Apply</button></Link>\n\n      </form>\n      </div>\n\n    );\n  }\n};\n\nexport default Apply;\n// <button onClick={this.showWidget} className=\"resume\">Upload Resume</button>\n","import React, { Component } from 'react';\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\n// import './../App.css';\nimport axios from 'axios';\nimport UserProfile from './UserProfile';\nimport Nav from './Nav.js';\nimport Footer from './Footer.js';\nimport { Link } from 'react-router-dom';\n\nclass Aboutme extends Component {\n  render(){\n    return(\n\n      <div>\n        <Nav/>\n        <div className=\"container aboutme\">\n          <h3>About me</h3>\n          <p><em>Hi There! I am a sofware developer and enjoy making differernt kind of website. This is my dream to make a job-board website application. I have used react.js a front-end frame work. I am open to any feedback.</em></p>\n\n          <li className=\"about\">Sydney | NSW</li>\n          <li className=\"about\"><a href=\"tel:1-212-555-5555\" title=\"Give me a call\">(043) 2912-432</a></li>\n          <li className=\"about\"><a href=\"mailto:pandyapurvi13@gmail.com\" title=\"Send me an email\">pandyapurvi13@gmail.com</a></li>\n          <br></br>\n          <li className=\"about\"><a href=\"https://github.com/pandyapurvi\" target=\"_blank\" ><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSj9OEYLj6VT6yKV0lolu62aN0F-4l_EU4ql791SzdxR9zW_rbI\" height=\"100\" width=\"100\"/></a></li>\n          <li className=\"about\"><a href=\"https://www.linkedin.com/in/pandyapurvi/\" target=\"_blank\"><img src=\"https://cdn3.iconfinder.com/data/icons/free-social-icons/67/linkedin_circle_black-512.png\" height=\"100\" width=\"100\"/></a></li>\n\n\n          <div class=\"copyright\">&copy; ALL OF THE RIGHTS RESERVED\n          </div>\n          </div>\n          <Footer/>\n        </div>\n\n    )\n  }\n};\nexport default Aboutme;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport App from './components/App';\nimport JobDetail from './components/JobDetail';\nimport NewJob from './components/NewJob';\nimport SeekerSignUp from './components/SeekerSignUp';\nimport EmployerSignup from './components/EmployerSignup';\nimport Seeker from './components/Seeker';\nimport SeekerDetail from './components/SeekerDetail';\nimport Employer from './components/Employer';\nimport EmployerDetail from './components/EmployerDetail';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport Apply from './components/Apply';\nimport Aboutme from './components/Aboutme';\n\nconst Routes = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route exact path=\"/job/:id\" component={JobDetail} />\n      <Route exact path=\"/newjob\" component={NewJob}/>\n      <Route exact path=\"/job/:id/apply\" component={Apply} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/logout\" component={Logout} />\n      <Route exact path=\"/seekersignup\" component={SeekerSignUp} />\n      <Route exact path=\"/employersignup\" component={EmployerSignup} />\n      <Route exact path=\"/seeker\" component={Seeker} />\n      <Route exact path=\"/employer\" component={Employer} />\n      <Route exact path=\"/seeker/:id\" component={SeekerDetail} />\n      <Route exact path=\"/employer/:id\" component={EmployerDetail} />\n      <Route exact path=\"/aboutme\" component={Aboutme} />\n    </div>\n  </Router>\n);\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport App from './components/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(Routes, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}